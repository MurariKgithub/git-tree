/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
    TreeNode* func(TreeNode *root,vector<TreeNode*> &ans,set<int> &s){
        
        if(root->left) root->left = func(root->left,ans,s);
        if(root->right) root->right = func(root->right,ans,s);
        if(root!=NULL && s.find(root->val)!=s.end()){
            if(root->left){ 
               ans.push_back(root->left);
               
             }
            if(root->right){
                ans.push_back(root->right);
            }
            return NULL;
        }
        return root;
    }
public:
    vector<TreeNode*> delNodes(TreeNode* root, vector<int>& to_delete) {
        vector<TreeNode*> ans;
        
        set<int> s;
        
        for(auto it:to_delete) s.insert(it);
        
        
        func(root,ans,s);
        
        if(s.find(root->val)==s.end())
            ans.push_back(root);
        
        return ans;
    }
};
